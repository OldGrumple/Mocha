{"version":3,"file":"js/514.953d91a6.js","mappings":"swBAgEA,IAEIA,EAFEC,GAAaC,EAAAA,EAAAA,IAAI,MACjBC,GAAaD,EAAAA,EAAAA,IAAI,IAGjBE,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,eAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQC,EAAAA,EAAMC,IAAI,cAAa,OAAxCP,EAAQG,EAAAK,KACRP,EAAQD,EAASS,KAAKR,MAG5BV,EAAWmB,MAAQT,EAAMU,MAAK,SAAAC,GAAI,MAAkB,WAAdA,EAAKC,IAAiB,IAC5DpB,EAAWiB,MAAQT,EAAMa,QAAO,SAAAF,GAAI,MAAkB,WAAdA,EAAKC,IAAiB,IAACV,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,YAE/Da,QAAQC,MAAM,yBAAwBd,EAAAY,IAAQ,yBAAAZ,EAAAe,OAAA,GAAAnB,EAAA,kBAEjD,kBAXe,OAAAJ,EAAAwB,MAAA,KAAAC,UAAA,KAaVC,EAAsB,SAACC,GAC3B,IAAMC,EAAc,6CACpB,OAAQD,GACN,IAAK,SACH,MAAO,GAAPE,OAAUD,EAAW,gCACvB,IAAK,UACH,MAAO,GAAPC,OAAUD,EAAW,4BACvB,IAAK,QACH,MAAO,GAAPC,OAAUD,EAAW,kCACvB,QACE,MAAO,GAAPC,OAAUD,EAAW,8BAE3B,EAEME,EAAc,SAACC,GACnB,GAAc,IAAVA,EAAa,MAAO,UACxB,IAAMC,EAAI,KACJC,EAAQ,CAAC,QAAS,KAAM,KAAM,KAAM,MACpCC,EAAIC,KAAKC,MAAMD,KAAKE,IAAIN,GAASI,KAAKE,IAAIL,IAChD,OAAOM,YAAYP,EAAQI,KAAKI,IAAIP,EAAGE,IAAIM,QAAQ,IAAM,IAAMP,EAAMC,EACvE,EAEMO,EAAa,SAACC,GAClB,IAAKA,EAAW,MAAO,QACvB,IAAMC,EAAO,IAAIC,KAAKF,GACtB,OAAOC,EAAKE,gBACd,E,OAEAC,EAAAA,EAAAA,KAAU,WACR/C,IAEAJ,EAAeoD,YAAYhD,EAAY,IACzC,KAEAiD,EAAAA,EAAAA,KAAY,WACNrD,GACFsD,cAActD,EAElB,I,ywFCpHMuD,EAAc,EAEpB,G","sources":["webpack://minecraft-server-manager-frontend/./src/views/NodesView.vue","webpack://minecraft-server-manager-frontend/./src/views/NodesView.vue?7341"],"sourcesContent":["<template>\n  <div class=\"container mx-auto px-4 py-8\">\n    <h1 class=\"text-3xl font-bold mb-8\">Nodes</h1>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <!-- Master Node -->\n      <div v-if=\"masterNode\" class=\"bg-white rounded-lg shadow-md p-6 border-2 border-blue-500\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h2 class=\"text-xl font-semibold text-blue-600\">Master Node</h2>\n          <span :class=\"getStatusBadgeClass(masterNode.status)\">\n            {{ masterNode.status }}\n          </span>\n        </div>\n        <div class=\"space-y-2\">\n          <p><span class=\"font-medium\">Hostname:</span> {{ masterNode.hostname }}</p>\n          <p><span class=\"font-medium\">OS:</span> {{ masterNode.os }}</p>\n          <p><span class=\"font-medium\">CPU Cores:</span> {{ masterNode.cpuCores }}</p>\n          <p><span class=\"font-medium\">Memory:</span> {{ formatBytes(masterNode.memoryBytes) }}</p>\n          <p><span class=\"font-medium\">Last Seen:</span> {{ formatTime(masterNode.lastSeen) }}</p>\n        </div>\n        <div class=\"mt-4\">\n          <router-link \n            :to=\"{ name: 'node-detail', params: { id: masterNode._id }}\"\n            class=\"text-blue-600 hover:text-blue-800\"\n          >\n            View Details →\n          </router-link>\n        </div>\n      </div>\n\n      <!-- Agent Nodes -->\n      <div v-for=\"node in agentNodes\" :key=\"node._id\" class=\"bg-white rounded-lg shadow-md p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h2 class=\"text-xl font-semibold\">{{ node.name }}</h2>\n          <span :class=\"getStatusBadgeClass(node.status)\">\n            {{ node.status }}\n          </span>\n        </div>\n        <div class=\"space-y-2\">\n          <p><span class=\"font-medium\">Hostname:</span> {{ node.hostname }}</p>\n          <p><span class=\"font-medium\">OS:</span> {{ node.os }}</p>\n          <p><span class=\"font-medium\">CPU Cores:</span> {{ node.cpuCores }}</p>\n          <p><span class=\"font-medium\">Memory:</span> {{ formatBytes(node.metrics.memoryUsed) }} / {{ formatBytes(node.metrics.memoryTotal) }}</p>\n          <p><span class=\"font-medium\">CPU Usage:</span> {{ node.metrics.cpuUsage.toFixed(1) }}%</p>\n          <p><span class=\"font-medium\">Disk Usage:</span> {{ node.metrics.diskUsage.toFixed(1) }}%</p>\n          <p><span class=\"font-medium\">Last Seen:</span> {{ formatTime(node.lastSeen) }}</p>\n        </div>\n        <div class=\"mt-4\">\n          <router-link \n            :to=\"{ name: 'node-detail', params: { id: node._id }}\"\n            class=\"text-blue-600 hover:text-blue-800\"\n          >\n            View Details →\n          </router-link>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport axios from 'axios';\n\nconst masterNode = ref(null);\nconst agentNodes = ref([]);\nlet pollInterval;\n\nconst fetchNodes = async () => {\n  try {\n    const response = await axios.get('/api/nodes');\n    const nodes = response.data.nodes;\n    \n    // Separate master and agent nodes\n    masterNode.value = nodes.find(node => node.name === 'Master');\n    agentNodes.value = nodes.filter(node => node.name !== 'Master');\n  } catch (error) {\n    console.error('Failed to fetch nodes:', error);\n  }\n};\n\nconst getStatusBadgeClass = (status) => {\n  const baseClasses = 'px-2 py-1 rounded-full text-sm font-medium';\n  switch (status) {\n    case 'online':\n      return `${baseClasses} bg-green-100 text-green-800`;\n    case 'offline':\n      return `${baseClasses} bg-red-100 text-red-800`;\n    case 'error':\n      return `${baseClasses} bg-yellow-100 text-yellow-800`;\n    default:\n      return `${baseClasses} bg-gray-100 text-gray-800`;\n  }\n};\n\nconst formatBytes = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nconst formatTime = (timestamp) => {\n  if (!timestamp) return 'Never';\n  const date = new Date(timestamp);\n  return date.toLocaleString();\n};\n\nonMounted(() => {\n  fetchNodes();\n  // Poll for updates every 5 seconds\n  pollInterval = setInterval(fetchNodes, 5000);\n});\n\nonUnmounted(() => {\n  if (pollInterval) {\n    clearInterval(pollInterval);\n  }\n});\n</script> ","import script from \"./NodesView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NodesView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["pollInterval","masterNode","ref","agentNodes","fetchNodes","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","nodes","wrap","_context","prev","next","axios","get","sent","data","value","find","node","name","filter","t0","console","error","stop","apply","arguments","getStatusBadgeClass","status","baseClasses","concat","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatTime","timestamp","date","Date","toLocaleString","onMounted","setInterval","onUnmounted","clearInterval","__exports__"],"sourceRoot":""}