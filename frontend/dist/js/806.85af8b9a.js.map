{"version":3,"file":"js/806.85af8b9a.js","mappings":"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","sources":["webpack://minecraft-server-manager-frontend/./node_modules/core-js/internals/object-to-array.js","webpack://minecraft-server-manager-frontend/./node_modules/core-js/modules/es.object.values.js","webpack://minecraft-server-manager-frontend/./node_modules/@kurkle/color/dist/color.esm.js","webpack://minecraft-server-manager-frontend/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://minecraft-server-manager-frontend/./node_modules/chart.js/dist/chart.js","webpack://minecraft-server-manager-frontend/./node_modules/chart.js/auto/auto.js","webpack://minecraft-server-manager-frontend/./src/components/NodeSecurityManager.vue","webpack://minecraft-server-manager-frontend/./src/components/NodeApiKeyManager.vue","webpack://minecraft-server-manager-frontend/./src/components/NodeApiKeyManager.vue?faa9","webpack://minecraft-server-manager-frontend/./src/components/NodeCertificateManager.vue","webpack://minecraft-server-manager-frontend/./src/components/NodeCertificateManager.vue?9621","webpack://minecraft-server-manager-frontend/./src/components/NodeSecurityManager.vue?a7c7","webpack://minecraft-server-manager-frontend/./src/components/JavaStatusCard.vue","webpack://minecraft-server-manager-frontend/./src/components/JavaStatusCard.vue?dd99","webpack://minecraft-server-manager-frontend/./src/views/NodeDetail.vue","webpack://minecraft-server-manager-frontend/./src/views/NodeDetail.vue?eca6"],"sourcesContent":["'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar objectGetPrototypeOf = require('../internals/object-get-prototype-of');\nvar objectKeys = require('../internals/object-keys');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;\n\nvar propertyIsEnumerable = uncurryThis($propertyIsEnumerable);\nvar push = uncurryThis([].push);\n\n// in some IE versions, `propertyIsEnumerable` returns incorrect result on integer keys\n// of `null` prototype objects\nvar IE_BUG = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-create -- safe\n  var O = Object.create(null);\n  O[2] = 2;\n  return !propertyIsEnumerable(O, 2);\n});\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject(it);\n    var keys = objectKeys(O);\n    var IE_WORKAROUND = IE_BUG && objectGetPrototypeOf(O) === null;\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || (IE_WORKAROUND ? key in O : propertyIsEnumerable(O, key))) {\n        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nmodule.exports = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod(false)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.8\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.8\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","<template>\n  <div class=\"bg-white shadow rounded-lg\">\n    <!-- Tabs -->\n    <div class=\"border-b border-gray-200\">\n      <nav class=\"-mb-px flex\">\n        <button\n          v-for=\"tab in tabs\"\n          :key=\"tab.name\"\n          @click=\"currentTab = tab.name\"\n          :class=\"[\n            currentTab === tab.name\n              ? 'border-blue-500 text-blue-600'\n              : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n            'whitespace-nowrap py-4 px-6 border-b-2 font-medium text-sm'\n          ]\"\n        >\n          {{ tab.label }}\n        </button>\n      </nav>\n    </div>\n\n    <!-- Tab Content -->\n    <div class=\"p-6\">\n      <NodeApiKeyManager\n        v-if=\"currentTab === 'api-key'\"\n        :nodeId=\"nodeId\"\n      />\n      <NodeCertificateManager\n        v-if=\"currentTab === 'certificates'\"\n        :nodeId=\"nodeId\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport NodeApiKeyManager from './NodeApiKeyManager.vue';\nimport NodeCertificateManager from './NodeCertificateManager.vue';\n\nexport default {\n  name: 'NodeSecurityManager',\n  components: {\n    NodeApiKeyManager,\n    NodeCertificateManager\n  },\n  props: {\n    nodeId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      currentTab: 'api-key',\n      tabs: [\n        { name: 'api-key', label: 'API Key' },\n        { name: 'certificates', label: 'Certificates' }\n      ]\n    };\n  }\n};\n</script> ","<template>\n  <div class=\"bg-white shadow rounded-lg p-6\">\n    <div class=\"flex justify-between items-center mb-4\">\n      <h3 class=\"text-lg font-medium text-gray-900\">API Key Management</h3>\n      <button\n        @click=\"generateNewApiKey\"\n        class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n      >\n        Generate New Key\n      </button>\n    </div>\n\n    <div v-if=\"currentApiKey\" class=\"mt-4\">\n      <div class=\"bg-gray-50 p-4 rounded-md\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex-1\">\n            <p class=\"text-sm font-medium text-gray-500\">Current API Key</p>\n            <div class=\"mt-1 flex items-center\">\n              <input\n                type=\"password\"\n                :value=\"currentApiKey\"\n                readonly\n                class=\"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n              />\n              <button\n                @click=\"copyApiKey\"\n                class=\"ml-2 px-3 py-2 text-sm text-gray-600 hover:text-gray-900\"\n              >\n                <svg \n                  xmlns=\"http://www.w3.org/2000/svg\" \n                  class=\"h-5 w-5\" \n                  viewBox=\"0 0 20 20\" \n                  fill=\"currentColor\"\n                >\n                  <path d=\"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\" />\n                  <path d=\"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"error\" class=\"mt-4\">\n      <div class=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <span class=\"block sm:inline\">{{ error }}</span>\n      </div>\n    </div>\n\n    <div v-if=\"success\" class=\"mt-4\">\n      <div class=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <span class=\"block sm:inline\">{{ success }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'NodeApiKeyManager',\n  props: {\n    nodeId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      currentApiKey: null,\n      error: null,\n      success: null\n    };\n  },\n  methods: {\n    async generateNewApiKey() {\n      try {\n        this.error = null;\n        this.success = null;\n        \n        const response = await axios.post(`/api/nodes/${this.nodeId}/generate-api-key`);\n        this.currentApiKey = response.data.apiKey;\n        this.success = 'New API key generated successfully';\n      } catch (error) {\n        this.error = error.response?.data?.error || 'Failed to generate API key';\n      }\n    },\n    copyApiKey() {\n      navigator.clipboard.writeText(this.currentApiKey)\n        .then(() => {\n          this.success = 'API key copied to clipboard';\n          setTimeout(() => {\n            this.success = null;\n          }, 2000);\n        })\n        .catch(() => {\n          this.error = 'Failed to copy API key';\n        });\n    }\n  }\n};\n</script> ","import { render } from \"./NodeApiKeyManager.vue?vue&type=template&id=6a0643f8\"\nimport script from \"./NodeApiKeyManager.vue?vue&type=script&lang=js\"\nexport * from \"./NodeApiKeyManager.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"bg-white shadow rounded-lg p-6\">\n    <div class=\"flex justify-between items-center mb-4\">\n      <h3 class=\"text-lg font-medium text-gray-900\">Certificate Management</h3>\n      <button\n        @click=\"regenerateCertificates\"\n        class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\"\n      >\n        Regenerate Certificates\n      </button>\n    </div>\n\n    <div v-if=\"certificates\" class=\"mt-4 space-y-4\">\n      <!-- Public Key -->\n      <div class=\"bg-gray-50 p-4 rounded-md\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex-1\">\n            <p class=\"text-sm font-medium text-gray-500\">Public Key</p>\n            <div class=\"mt-1 flex items-center\">\n              <input\n                type=\"password\"\n                :value=\"certificates.publicKey\"\n                readonly\n                class=\"block w-full px-3 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\"\n              />\n              <button\n                @click=\"copyPublicKey\"\n                class=\"ml-2 px-3 py-2 text-sm text-gray-600 hover:text-gray-900\"\n              >\n                <svg \n                  xmlns=\"http://www.w3.org/2000/svg\" \n                  class=\"h-5 w-5\" \n                  viewBox=\"0 0 20 20\" \n                  fill=\"currentColor\"\n                >\n                  <path d=\"M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\" />\n                  <path d=\"M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z\" />\n                </svg>\n              </button>\n            </div>\n            <p class=\"mt-1 text-xs text-gray-500\">\n              Generated at: {{ new Date(certificates.generatedAt).toLocaleString() }}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"error\" class=\"mt-4\">\n      <div class=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <span class=\"block sm:inline\">{{ error }}</span>\n      </div>\n    </div>\n\n    <div v-if=\"success\" class=\"mt-4\">\n      <div class=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative\" role=\"alert\">\n        <span class=\"block sm:inline\">{{ success }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'NodeCertificateManager',\n  props: {\n    nodeId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      certificates: null,\n      error: null,\n      success: null\n    };\n  },\n  methods: {\n    async regenerateCertificates() {\n      try {\n        this.error = null;\n        this.success = null;\n        \n        const response = await axios.post(`/api/nodes/${this.nodeId}/regenerate-certificates`);\n        this.certificates = response.data;\n        this.success = 'Certificates regenerated successfully';\n      } catch (error) {\n        this.error = error.response?.data?.error || 'Failed to regenerate certificates';\n      }\n    },\n    copyPublicKey() {\n      navigator.clipboard.writeText(this.certificates.publicKey)\n        .then(() => {\n          this.success = 'Public key copied to clipboard';\n          setTimeout(() => {\n            this.success = null;\n          }, 2000);\n        })\n        .catch(() => {\n          this.error = 'Failed to copy public key';\n        });\n    }\n  }\n};\n</script> ","import { render } from \"./NodeCertificateManager.vue?vue&type=template&id=1ef4a865\"\nimport script from \"./NodeCertificateManager.vue?vue&type=script&lang=js\"\nexport * from \"./NodeCertificateManager.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./NodeSecurityManager.vue?vue&type=template&id=270a7d98\"\nimport script from \"./NodeSecurityManager.vue?vue&type=script&lang=js\"\nexport * from \"./NodeSecurityManager.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"bg-white shadow rounded-lg p-6\">\n    <div class=\"flex items-center justify-between mb-4\">\n      <h3 class=\"text-lg font-medium text-gray-900\">Java Status</h3>\n      <div v-if=\"!javaStatus.installed || !javaStatus.meetsRequirement\" class=\"flex items-center\">\n        <button\n          @click=\"installJava\"\n          :disabled=\"isInstalling\"\n          class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          <svg\n            v-if=\"isInstalling\"\n            class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <circle\n              class=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              stroke-width=\"4\"\n            ></circle>\n            <path\n              class=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            ></path>\n          </svg>\n          {{ isInstalling ? 'Installing...' : 'Install Java' }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"space-y-4\">\n      <div class=\"flex items-center\">\n        <div class=\"flex-shrink-0\">\n          <div\n            :class=\"[\n              'h-2.5 w-2.5 rounded-full',\n              javaStatus.installed ? 'bg-green-400' : 'bg-red-400'\n            ]\"\n          ></div>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-gray-900\">\n            Installation Status\n          </p>\n          <p class=\"text-sm text-gray-500\">\n            {{ javaStatus.installed ? 'Java is installed' : 'Java is not installed' }}\n          </p>\n        </div>\n      </div>\n\n      <div v-if=\"javaStatus.installed\" class=\"flex items-center\">\n        <div class=\"flex-shrink-0\">\n          <div\n            :class=\"[\n              'h-2.5 w-2.5 rounded-full',\n              javaStatus.meetsRequirement ? 'bg-green-400' : 'bg-yellow-400'\n            ]\"\n          ></div>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-gray-900\">\n            Version Compatibility\n          </p>\n          <p class=\"text-sm text-gray-500\">\n            {{ javaStatus.meetsRequirement ? 'Version meets requirements' : 'Version does not meet requirements' }}\n          </p>\n        </div>\n      </div>\n\n      <div v-if=\"javaStatus.installed\" class=\"flex items-center\">\n        <div class=\"flex-shrink-0\">\n          <div class=\"h-2.5 w-2.5 rounded-full bg-blue-400\"></div>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm font-medium text-gray-900\">\n            Current Version\n          </p>\n          <p class=\"text-sm text-gray-500\">\n            {{ javaStatus.version || 'Unknown' }}\n          </p>\n        </div>\n      </div>\n\n      <div v-if=\"error\" class=\"mt-4\">\n        <div class=\"rounded-md bg-red-50 p-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg\n                class=\"h-5 w-5 text-red-400\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm text-red-700\">\n                {{ error }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, defineProps } from 'vue'\nimport axios from 'axios'\n\nconst props = defineProps({\n  nodeId: {\n    type: String,\n    required: true\n  }\n})\n\nconst javaStatus = ref({\n  installed: false,\n  meetsRequirement: false,\n  version: null\n})\n\nconst isInstalling = ref(false)\nconst error = ref(null)\n\nconst fetchJavaStatus = async () => {\n  try {\n    const response = await axios.get(`/api/nodes/${props.nodeId}`)\n    if (response.data.node.javaStatus) {\n      javaStatus.value = response.data.node.javaStatus\n    }\n  } catch (err) {\n    error.value = 'Failed to fetch Java status'\n    console.error('Error fetching Java status:', err)\n  }\n}\n\nconst installJava = async () => {\n  isInstalling.value = true\n  error.value = null\n  \n  try {\n    await axios.post(`/api/nodes/${props.nodeId}/install-java`)\n    // Start polling for status updates\n    const pollInterval = setInterval(async () => {\n      await fetchJavaStatus()\n      if (javaStatus.value.installed && javaStatus.value.meetsRequirement) {\n        clearInterval(pollInterval)\n        isInstalling.value = false\n      }\n    }, 5000) // Poll every 5 seconds\n\n    // Clear interval after 5 minutes (timeout)\n    setTimeout(() => {\n      clearInterval(pollInterval)\n      if (isInstalling.value) {\n        isInstalling.value = false\n        error.value = 'Installation timed out'\n      }\n    }, 300000) // 5 minutes\n  } catch (err) {\n    isInstalling.value = false\n    error.value = 'Failed to initiate Java installation'\n    console.error('Error installing Java:', err)\n  }\n}\n\nonMounted(() => {\n  fetchJavaStatus()\n})\n</script> ","import script from \"./JavaStatusCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./JavaStatusCard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"container mx-auto px-4 py-8\">\n    <div class=\"mb-8\">\n      <router-link to=\"/nodes\" class=\"text-blue-600 hover:text-blue-800 flex items-center\">\n        <svg \n          class=\"w-5 h-5 mr-2\" \n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path \n            stroke-linecap=\"round\" \n            stroke-linejoin=\"round\" \n            stroke-width=\"2\" \n            d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\n          />\n        </svg>\n        Back to Nodes\n      </router-link>\n    </div>\n\n    <div v-if=\"node\" class=\"space-y-8\">\n      <!-- Node Header -->\n      <div class=\"bg-white rounded-lg shadow-md p-6\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h1 class=\"text-3xl font-bold\">{{ node.name }}</h1>\n          <span :class=\"getStatusBadgeClass(node.status)\">\n            {{ node.status }}\n          </span>\n        </div>\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          <div>\n            <p class=\"text-sm text-gray-600\">Hostname</p>\n            <p class=\"font-medium\">{{ node.hostname }}</p>\n          </div>\n          <div>\n            <p class=\"text-sm text-gray-600\">Operating System</p>\n            <p class=\"font-medium\">{{ node.os }}</p>\n          </div>\n          <div>\n            <p class=\"text-sm text-gray-600\">Last Seen</p>\n            <p class=\"font-medium\">{{ formatTime(node.lastSeen) }}</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Java Status Card -->\n      <JavaStatusCard :nodeId=\"node._id\" />\n\n      <!-- System Metrics -->\n      <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <!-- CPU Usage -->\n        <div class=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 class=\"text-xl font-semibold mb-4\">CPU Usage</h2>\n          <div class=\"relative h-48\">\n            <canvas id=\"cpuChart\" ref=\"cpuChartRef\"></canvas>\n          </div>\n          <div class=\"mt-4 grid grid-cols-2 gap-4\">\n            <div>\n              <p class=\"text-sm text-gray-600\">Current Usage</p>\n              <p class=\"text-2xl font-bold\">{{ metrics.cpuUsage.toFixed(2) }}%</p>\n            </div>\n            <div>\n              <p class=\"text-sm text-gray-600\">Cores</p>\n              <p class=\"text-2xl font-bold\">{{ node.metrics?.cpuCores || 'N/A' }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Memory Usage -->\n        <div class=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 class=\"text-xl font-semibold mb-4\">Memory Usage</h2>\n          <div class=\"relative h-48\">\n            <canvas id=\"memoryChart\" ref=\"memoryChartRef\"></canvas>\n          </div>\n          <div class=\"mt-4 grid grid-cols-2 gap-4\">\n            <div>\n              <p class=\"text-sm text-gray-600\">Used</p>\n              <p class=\"text-2xl font-bold\">{{ formatBytes(metrics.memoryUsed) }}</p>\n            </div>\n            <div>\n              <p class=\"text-sm text-gray-600\">Total</p>\n              <p class=\"text-2xl font-bold\">{{ formatBytes(node.memoryBytes) }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Disk Usage -->\n        <div class=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 class=\"text-xl font-semibold mb-4\">Disk Usage</h2>\n          <div class=\"relative h-48\">\n            <canvas id=\"diskChart\" ref=\"diskChartRef\"></canvas>\n          </div>\n          <div class=\"mt-4 grid grid-cols-2 gap-4\">\n            <div>\n              <p class=\"text-sm text-gray-600\">Used</p>\n              <p class=\"text-2xl font-bold\">{{ formatBytes(metrics.diskUsage) }}</p>\n            </div>\n            <div>\n              <p class=\"text-sm text-gray-600\">Total</p>\n              <p class=\"text-2xl font-bold\">{{ formatBytes(node.memoryBytes) }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Network Usage -->\n        <div class=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 class=\"text-xl font-semibold mb-4\">Network Usage</h2>\n          <div class=\"relative h-48\">\n            <canvas id=\"networkChart\" ref=\"networkChartRef\"></canvas>\n          </div>\n          <div class=\"mt-4 grid grid-cols-2 gap-4\">\n            <div>\n              <p class=\"text-sm text-gray-600\">Upload</p>\n              <p class=\"text-2xl font-bold\">{{ formatBytes(metrics.networkUpload) }}/s</p>\n            </div>\n            <div>\n              <p class=\"text-sm text-gray-600\">Download</p>\n              <p class=\"text-2xl font-bold\">{{ formatBytes(metrics.networkDownload) }}/s</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Security Management -->\n      <div class=\"bg-white rounded-lg shadow-md p-6\">\n        <h2 class=\"text-xl font-semibold mb-4\">Security Management</h2>\n        <NodeSecurityManager :nodeId=\"node._id\" />\n      </div>\n\n      <!-- Running Servers -->\n      <div class=\"bg-white rounded-lg shadow-md p-6\">\n        <h2 class=\"text-xl font-semibold mb-4\">Running Servers</h2>\n        <div class=\"overflow-x-auto\">\n          <table class=\"min-w-full divide-y divide-gray-200\">\n            <thead>\n              <tr>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Version</th>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Players</th>\n                <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n              </tr>\n            </thead>\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n              <tr v-for=\"server in runningServers\" :key=\"server._id\">\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{{ server.name }}</td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ server.type }}</td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ server.version }}</td>\n                <td class=\"px-6 py-4 whitespace-nowrap\">\n                  <span :class=\"getServerStatusBadgeClass(server.status)\">\n                    {{ server.status }}\n                  </span>\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ server.players }}/{{ server.maxPlayers }}</td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                  <button @click=\"viewServer(server._id)\" class=\"text-blue-600 hover:text-blue-900 mr-3\">View</button>\n                  <button @click=\"stopServer(server._id)\" class=\"text-red-600 hover:text-red-900\">Stop</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport NodeSecurityManager from '@/components/NodeSecurityManager.vue';\nimport JavaStatusCard from '../components/JavaStatusCard.vue';\n\nconst route = useRoute();\nconst router = useRouter();\nconst node = ref(null);\nconst metrics = ref({\n  cpuUsage: 0,\n  memoryUsed: 0,\n  memoryTotal: 0,\n  diskUsage: 0,\n  networkUpload: 0,\n  networkDownload: 0\n});\n\n// Add refs for chart canvases\nconst cpuChartRef = ref(null);\nconst memoryChartRef = ref(null);\nconst diskChartRef = ref(null);\nconst networkChartRef = ref(null);\n\nconst runningServers = ref([]);\nlet pollInterval;\nlet charts = {\n  cpu: null,\n  memory: null,\n  disk: null,\n  network: null\n};\n\nconst destroyCharts = () => {\n  Object.values(charts).forEach(chart => {\n    if (chart) {\n      chart.destroy();\n    }\n  });\n  charts = {\n    cpu: null,\n    memory: null,\n    disk: null,\n    network: null\n  };\n};\n\nconst initializeCharts = () => {\n  // Destroy existing charts first\n  destroyCharts();\n\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: {\n      duration: 300 // Add a small animation duration for smoother updates\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      },\n      x: {\n        display: true,\n        ticks: {\n          maxTicksLimit: 10,\n          maxRotation: 0 // Keep labels horizontal\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    },\n    elements: {\n      line: {\n        tension: 0.3\n      },\n      point: {\n        radius: 3, // Show points since we're updating less frequently\n        hoverRadius: 5\n      }\n    }\n  };\n\n  // CPU Chart\n  if (cpuChartRef.value) {\n    charts.cpu = new Chart(cpuChartRef.value.getContext('2d'), {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: [{\n          label: 'CPU Usage (%)',\n          data: [],\n          borderColor: 'rgb(59, 130, 246)',\n          backgroundColor: 'rgba(59, 130, 246, 0.1)',\n          fill: true\n        }]\n      },\n      options: {\n        ...chartOptions,\n        scales: {\n          ...chartOptions.scales,\n          y: {\n            ...chartOptions.scales.y,\n            max: 100,\n            ticks: {\n              callback: value => value + '%'\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Memory Chart\n  if (memoryChartRef.value) {\n    charts.memory = new Chart(memoryChartRef.value.getContext('2d'), {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: [{\n          label: 'Memory Usage (GB)',\n          data: [],\n          borderColor: 'rgb(16, 185, 129)',\n          backgroundColor: 'rgba(16, 185, 129, 0.1)',\n          fill: true\n        }]\n      },\n      options: {\n        ...chartOptions,\n        scales: {\n          ...chartOptions.scales,\n          y: {\n            ...chartOptions.scales.y,\n            ticks: {\n              callback: value => value.toFixed(1) + ' GB'\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Disk Chart\n  if (diskChartRef.value) {\n    charts.disk = new Chart(diskChartRef.value.getContext('2d'), {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: [{\n          label: 'Disk Usage (%)',\n          data: [],\n          borderColor: 'rgb(245, 158, 11)',\n          backgroundColor: 'rgba(245, 158, 11, 0.1)',\n          fill: true\n        }]\n      },\n      options: {\n        ...chartOptions,\n        scales: {\n          ...chartOptions.scales,\n          y: {\n            ...chartOptions.scales.y,\n            max: 100,\n            ticks: {\n              callback: value => value + '%'\n            }\n          }\n        }\n      }\n    });\n  }\n\n  // Network Chart\n  if (networkChartRef.value) {\n    charts.network = new Chart(networkChartRef.value.getContext('2d'), {\n      type: 'line',\n      data: {\n        labels: [],\n        datasets: [\n          {\n            label: 'Upload (MB/s)',\n            data: [],\n            borderColor: 'rgb(139, 92, 246)',\n            backgroundColor: 'rgba(139, 92, 246, 0.1)',\n            fill: true\n          },\n          {\n            label: 'Download (MB/s)',\n            data: [],\n            borderColor: 'rgb(236, 72, 153)',\n            backgroundColor: 'rgba(236, 72, 153, 0.1)',\n            fill: true\n          }\n        ]\n      },\n      options: {\n        ...chartOptions,\n        scales: {\n          ...chartOptions.scales,\n          y: {\n            ...chartOptions.scales.y,\n            ticks: {\n              callback: value => value.toFixed(1) + ' MB/s'\n            }\n          }\n        }\n      }\n    });\n  }\n};\n\nconst fetchNodeDetails = async () => {\n  try {\n    const response = await axios.get(`/api/nodes/${route.params.id}`);\n    node.value = response.data.node;\n    // Update metrics from node details\n    metrics.value = {\n      cpuUsage: node.value.metrics.cpuUsage,\n      memoryUsed: node.value.metrics.memoryUsed,\n      memoryTotal: node.value.metrics.memoryTotal,\n      diskUsage: node.value.metrics.diskUsage,\n      networkUpload: node.value.metrics.networkBytesOut,\n      networkDownload: node.value.metrics.networkBytesIn\n    };\n    \n    // Only initialize charts if they haven't been created yet\n    if (!charts.cpu) {\n      initializeCharts();\n    }\n    updateCharts();\n  } catch (error) {\n    console.error('Failed to fetch node details:', error);\n  }\n};\n\nconst fetchRunningServers = async () => {\n  try {\n    const response = await axios.get(`/api/nodes/${route.params.id}/servers`);\n    runningServers.value = response.data.servers;\n  } catch (error) {\n    console.error('Failed to fetch running servers:', error);\n  }\n};\n\nconst getStatusBadgeClass = (status) => {\n  const baseClasses = 'px-2 py-1 rounded-full text-sm font-medium';\n  switch (status) {\n    case 'online':\n      return `${baseClasses} bg-green-100 text-green-800`;\n    case 'offline':\n      return `${baseClasses} bg-red-100 text-red-800`;\n    case 'error':\n      return `${baseClasses} bg-yellow-100 text-yellow-800`;\n    default:\n      return `${baseClasses} bg-gray-100 text-gray-800`;\n  }\n};\n\nconst getServerStatusBadgeClass = (status) => {\n  const baseClasses = 'px-2 py-1 rounded-full text-sm font-medium';\n  switch (status) {\n    case 'running':\n      return `${baseClasses} bg-green-100 text-green-800`;\n    case 'stopped':\n      return `${baseClasses} bg-red-100 text-red-800`;\n    case 'starting':\n      return `${baseClasses} bg-yellow-100 text-yellow-800`;\n    default:\n      return `${baseClasses} bg-gray-100 text-gray-800`;\n  }\n};\n\nconst formatBytes = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nconst formatTime = (timestamp) => {\n  if (!timestamp) return 'Never';\n  const date = new Date(timestamp);\n  return date.toLocaleString();\n};\n\nconst updateCharts = () => {\n  if (!charts.cpu || !charts.memory || !charts.disk || !charts.network) {\n    return;\n  }\n\n  const timestamp = new Date().toLocaleTimeString();\n  const maxDataPoints = 20; // Keep 20 data points (10 minute window with 30s updates)\n  \n  // Update CPU Chart\n  if (charts.cpu) {\n    charts.cpu.data.labels.push(timestamp);\n    charts.cpu.data.datasets[0].data.push(metrics.value.cpuUsage);\n    if (charts.cpu.data.labels.length > maxDataPoints) {\n      charts.cpu.data.labels.shift();\n      charts.cpu.data.datasets[0].data.shift();\n    }\n    charts.cpu.update();  // Allow animation since we're updating less frequently\n  }\n\n  // Update Memory Chart\n  if (charts.memory) {\n    const memoryGB = metrics.value.memoryUsed / (1024 * 1024 * 1024);\n    charts.memory.data.labels.push(timestamp);\n    charts.memory.data.datasets[0].data.push(memoryGB);\n    if (charts.memory.data.labels.length > maxDataPoints) {\n      charts.memory.data.labels.shift();\n      charts.memory.data.datasets[0].data.shift();\n    }\n    charts.memory.update();\n  }\n\n  // Update Disk Chart\n  if (charts.disk) {\n    charts.disk.data.labels.push(timestamp);\n    charts.disk.data.datasets[0].data.push(metrics.value.diskUsage);\n    if (charts.disk.data.labels.length > maxDataPoints) {\n      charts.disk.data.labels.shift();\n      charts.disk.data.datasets[0].data.shift();\n    }\n    charts.disk.update();\n  }\n\n  // Update Network Chart\n  if (charts.network) {\n    const uploadMB = metrics.value.networkUpload / (1024 * 1024);\n    const downloadMB = metrics.value.networkDownload / (1024 * 1024);\n    \n    charts.network.data.labels.push(timestamp);\n    charts.network.data.datasets[0].data.push(uploadMB);\n    charts.network.data.datasets[1].data.push(downloadMB);\n    \n    if (charts.network.data.labels.length > maxDataPoints) {\n      charts.network.data.labels.shift();\n      charts.network.data.datasets[0].data.shift();\n      charts.network.data.datasets[1].data.shift();\n    }\n    charts.network.update();\n  }\n};\n\nconst viewServer = (serverId) => {\n  router.push(`/servers/${serverId}`);\n};\n\nconst stopServer = async (serverId) => {\n  try {\n    await axios.post(`/api/servers/${serverId}/stop`);\n    await fetchRunningServers();\n  } catch (error) {\n    console.error('Failed to stop server:', error);\n  }\n};\n\nonMounted(() => {\n  fetchNodeDetails();\n  fetchRunningServers();\n  \n  // Poll for updates every 30 seconds\n  pollInterval = setInterval(() => {\n    fetchNodeDetails();\n    fetchRunningServers();\n  }, 30000);\n});\n\nonUnmounted(() => {\n  if (pollInterval) {\n    clearInterval(pollInterval);\n  }\n  // Clean up charts\n  destroyCharts();\n});\n</script> ","import script from \"./NodeDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NodeDetail.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["DESCRIPTORS","fails","uncurryThis","objectGetPrototypeOf","objectKeys","toIndexedObject","$propertyIsEnumerable","propertyIsEnumerable","push","IE_BUG","O","Object","create","createMethod","TO_ENTRIES","it","key","keys","IE_WORKAROUND","length","i","result","module","exports","entries","values","$","$values","target","stat","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","sqrt","sort","pop","isNonPrimitive","Symbol","toPrimitive","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","iAxisKey","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","tabs","tab","$event","currentTab","_normalizeClass","_hoisted_4","_hoisted_5","_createBlock","_component_NodeApiKeyManager","nodeId","$props","_createCommentVNode","_component_NodeCertificateManager","role","$options","generateNewApiKey","currentApiKey","_hoisted_6","_hoisted_7","readonly","_hoisted_8","copyApiKey","xmlns","viewBox","_hoisted_9","_hoisted_10","_hoisted_11","_toDisplayString","success","_hoisted_12","_hoisted_13","_hoisted_14","required","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","_error$response","axios","post","sent","apiKey","t0","_this2","navigator","clipboard","writeText","__exports__","regenerateCertificates","certificates","publicKey","copyPublicKey","generatedAt","toLocaleString","_hoisted_15","components","NodeApiKeyManager","NodeCertificateManager","__props","javaStatus","ref","installed","meetsRequirement","isInstalling","fetchJavaStatus","_ref","installJava","_ref2","_callee3","pollInterval","_context3","setInterval","_callee2","_context2","clearInterval","onMounted","useRoute","router","useRouter","cpuUsage","memoryUsed","memoryTotal","diskUsage","networkUpload","networkDownload","cpuChartRef","memoryChartRef","diskChartRef","networkChartRef","runningServers","cpu","memory","disk","network","destroyCharts","initializeCharts","_objectSpread","toFixed","fetchNodeDetails","networkBytesOut","networkBytesIn","updateCharts","fetchRunningServers","servers","getStatusBadgeClass","status","baseClasses","getServerStatusBadgeClass","formatBytes","bytes","sizes","log","formatTime","toLocaleTimeString","maxDataPoints","memoryGB","uploadMB","downloadMB","viewServer","serverId","stopServer","_ref3","_x","onUnmounted"],"sourceRoot":""}